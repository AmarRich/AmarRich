- 👋 Hi, I’m @AmarRich
- 👀 I’m interested in ...
- 🌱 I’m currently learning ...
- 💞️ I’m looking to collaborate on ...
- 📫 How to reach me ...

<!---
AmarRich/AmarRich is a ✨ special ✨ repository because its `README.md` (this file) appears on your GitHub profile.
You can click the Preview link to take a look at your changes.
--->



class MedianFinder {
public:
    priority_queue<int> max_heap;
    priority_queue<int,vector<int>,greater<int>> min_heap;
    MedianFinder() {
        // kyun hun bhai 
    }
    
    void addNum(int num) {
        if(max_heap.empty() and min_heap.empty())
            max_heap.push(num);
        else {
            if (max_heap.top() < num)
                min_heap.push(num);
            else 
                max_heap.push(num);
        }
        int n= max_heap.size();
        int m= min_heap.size();
        if( n-m==2 or n-m==-2){
            if(n>m){
               min_heap.push(max_heap.top());
                max_heap.pop();
            }
            else {
               max_heap.push(min_heap.top());
                min_heap.pop();
            }
        }
    }
    
    double findMedian() {
           int n= max_heap.size();
        int m= min_heap.size();
        if ((n+m)%2==0){
          return  ((double) max_heap.top()+(double) min_heap.top())/2.0;
        }
        if(n>m) return max_heap.top();
        return min_heap.top();
    }
};
